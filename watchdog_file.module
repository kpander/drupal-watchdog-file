<?php
/**
 * @file
 * Write Watchdog events to a local file.
 *
 * This is a replacement for the dblog module, for performance-sensitive sites.
 *
 * History:
 * 2013-03-24, Kendall Anderson: Initial design/development
 */


/**
 * Define the variable where we store the path/filename of the log file.
 */
define('WATCHDOG_FILE_VAR_FILENAME', 'watchdog_file_filename');

/**
 * Define the variable where we store the timestamp date format.
 */
define('WATCHDOG_FILE_VAR_DATE_FORMAT', 'watchdog_file_date_format');
define('WATCHDOG_FILE_DEFAULT_DATE_FORMAT', 'Y-m-d H:i:s');

/**
 * Define the log file format.
 */
define('WATCHDOG_FILE_VAR_LOG_FORMAT', 'watchdog_file_log_format');
define('WATCHDOG_FILE_DEFAULT_LOG_FORMAT', "[%date]\t[%severity]\t[%type]\t[uid=%uid]\t[%user]\t%message\turi=%uri\treferer=%referer\tlink=%link");

/**
 * Define the variable for storing which event severity types to log.
 *
 * The default value (0,1,2,3,4,5,6) indicates recording all severity levels
 * *except* for the 'debug' level. The values correspond to the keys returned
 * by watchdog_severity_levels().
 */
define('WATCHDOG_FILE_VAR_INCLUDE_SEVERITY', 'watchdog_file_include_severity');
define('WATCHDOG_FILE_DEFAULT_INCLUDE_SEVERITY', "0,1,2,3,4,5,6");

/**
 * Define the variable for storing which event to ignore.
 */
define('WATCHDOG_FILE_VAR_EXCLUDE_KEYWORDS', 'watchdog_file_exclude_keywords');
define('WATCHDOG_FILE_DEFAULT_EXCLUDE_KEYWORDS', "");


/**
 * Implements hook_watchdog().
 */
function watchdog_file_watchdog(array $log_entry) {
  $log = new WatchdogFile(watchdog_file_get_configuration());
  $log->log($log_entry);
}

/**
 * Get the logging configuration.
 * 
 * @return associative array
 */
function watchdog_file_get_configuration() {
  $includes = variable_get(WATCHDOG_FILE_VAR_INCLUDE_SEVERITY, WATCHDOG_FILE_DEFAULT_INCLUDE_SEVERITY);
  if (!is_array($includes)) {
    $includes = (empty($includes)) ? array() : explode(',', $includes);
  }

  $excludes = trim(variable_get(WATCHDOG_FILE_VAR_EXCLUDE_KEYWORDS, WATCHDOG_FILE_DEFAULT_EXCLUDE_KEYWORDS));
  $excludes = explode("\n", $excludes);

  $config = array(
    'log_filename'  => watchdog_file_get_log_filename(),
    'log_format'    => variable_get(WATCHDOG_FILE_VAR_LOG_FORMAT, WATCHDOG_FILE_DEFAULT_LOG_FORMAT),
    'date_format'   => variable_get(WATCHDOG_FILE_VAR_DATE_FORMAT, WATCHDOG_FILE_DEFAULT_DATE_FORMAT),
    'includes'      => $includes,
    'excludes'      => $excludes,
    'levels'        => watchdog_severity_levels(),
  );

  return $config;
}

/**
 * Get the watchdog log filename.
 *
 * @return string
 */
function watchdog_file_get_log_filename() {
  $file = variable_get(WATCHDOG_FILE_VAR_FILENAME, '');
  return watchdog_file_expand_filename_vars($file);
}

/**
 * Expand any timestamp variables in the log file filename.
 *
 * @param string $file
 *   The raw log filename, without timestamp variables (if any) expanded.
 *
 * @return string
 */
function watchdog_file_expand_filename_vars($file) {
  $replacements = array(
    '%d'  => date('d', REQUEST_TIME), // day of month, 01 to 31
    '%w'  => date('w', REQUEST_TIME), // day of week, 0 (Sun) to 6 (Sat)
    '%z'  => date('z', REQUEST_TIME), // day of year, 0 to 365
    '%m'  => date('m', REQUEST_TIME), // month, 01 to 12
    '%Y'  => date('Y', REQUEST_TIME), // year, e.g. 1999
  );

  return strtr($file, $replacements);
}
