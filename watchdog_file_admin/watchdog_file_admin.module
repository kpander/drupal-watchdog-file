<?php
/**
 * @file
 * Provide administrative interface for the Watchdog File module.
 */


/**
 * Implements hook_menu().
 */
function watchdog_file_admin_menu() {
  $items = array();

  $items['admin/config/system/watchdog-file'] = array(
    'title'             => 'Watchdog File',
    'description'       => 'Configuration for Watchdog File.',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('watchdog_file_admin_settings'),
    'access arguments'  => array('administer site configuration'),
    'type'              => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Build the admin/settings form.
 */
function watchdog_file_admin_settings() {
  $form = array();

  // @todo provide a clearer intro message that makes it clear that
  // 1. this file must be web-writable
  // 2. this file must NOT be accessible *from* the website (security!)
  // @todo add documentation for filename timestamp expansions e.g., %Y %m %d etc
  //   see watchdog_file_expand_filename_vars()

  $form['filename'] = array(
    '#title'          => t("Log Filename"),
    '#type'           => 'fieldset',
    '#collapsible'    => TRUE,
    '#collapsed'      => FALSE,
  );
  $form['filename'][WATCHDOG_FILE_VAR_FILENAME] = array(
    '#title'          => t("Full path/filename for the watchdog log file:"),
    '#type'           => 'textfield',
    '#description'    => t("Provide an explicit path to a file that is writable by the webserver. This file should NOT be within the public_html folder! It should not be accessible from the website!<br><br>e.g., <code>/var/log/apache/MYSITE-watchdog.log</code>"),
    '#default_value'  => variable_get(WATCHDOG_FILE_VAR_FILENAME, ''),
  );
  $help = '<p>' . t("To allow for more flexible filenames, the log filename can include the following dynamic variables.") . '</p>';
  $headers = array(t('Variable'), t('Description'));
  $rows = array();
  $rows[] = array('%d', t("Day of the month e.g., 01 to 31"));
  $rows[] = array('%w', t("Day of the week e.g., 0 (Sunday) to 6 (Saturday)"));
  $rows[] = array('%z', t("Day of the year e.g., 0 to 365"));
  $rows[] = array('%m', t("Month number e.g., 01 (January) to 12"));
  $rows[] = array('%Y', t("Year e.g., 1999"));
  $help .= theme('table', array('header' => $headers, 'rows' => $rows));
  $help .= '<p>e.g., a log filename of <code>watchdog-file.%Y-%m-%d.log</code> would become <code>watchdog-file.' . date('Y-m-d') . '.log</code></p>';
  $form['filename']['help'] = array(
    '#type'           => 'markup',
    '#markup'         => $help,
  );


  $form[WATCHDOG_FILE_VAR_DATE_FORMAT] = array(
    '#title'          => t("Date/time format for log entries:"),
    '#type'           => 'textfield',
    '#description'    => t("Enter the formatting string for PHP's date() function. This will be used for the timestamp on all log entries."),
    '#default_value'  => variable_get(WATCHDOG_FILE_VAR_DATE_FORMAT, WATCHDOG_FILE_DEFAULT_DATE_FORMAT),
  );


  // @todo need a better way of configuring this...
  $form[WATCHDOG_FILE_VAR_LOG_FORMAT] = array(
    '#title'          => t("Format an individual log entries:"),
    '#type'           => 'textfield',
    '#description'    => t("@todo define available variables with examples"),
    '#default_value'  => variable_get(WATCHDOG_FILE_VAR_LOG_FORMAT, WATCHDOG_FILE_DEFAULT_LOG_FORMAT),
  );


  // Validate the form: ensure the path/filename is writable.
  $form['#validate'][] = 'watchdog_file_admin_settings_validate';

  return system_settings_form($form);
}

/**
 * Validate the admin/settings form.
 */
function watchdog_file_admin_settings_validate(&$form, &$form_state) {
  $file = $form_state['values'][WATCHDOG_FILE_VAR_FILENAME];
  $file = watchdog_file_expand_filename_vars($file);

  // Ensure the watchdog path/filename given is writable by the webserver.
  if (!watchdog_file_is_writable($file)) {
    form_set_error(WATCHDOG_FILE_VAR_FILENAME, t("The watchdog log filename cannot be written to. You'll need to change file permissions so the webserver is allowed to write to this file."));
  }
}
